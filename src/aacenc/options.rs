use std::ptr::null;

use ffi::class::option::{AVOption, DefaultValue};
use libc::{c_double, c_long};

use crate::types::*;

pub(super) const OPTIONS: [AVOption; 22] = [
    AVOption {
        name: c"aac_coder".as_ptr(),
        help: c"Coding algorithm".as_ptr(),
        offset: 8,
        type_0: AV_OPT_TYPE_INT,
        default_val: DefaultValue {
            i64_0: AAC_CODER_TWOLOOP as c_long,
        },
        min: 0.,
        max: (AAC_CODER_NB - 1) as c_double,
        flags: 1 | 8,
        unit: c"coder".as_ptr(),
    },
    AVOption {
        name: c"anmr".as_ptr(),
        help: c"ANMR method".as_ptr(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue {
            i64_0: AAC_CODER_ANMR as c_long,
        },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"coder".as_ptr(),
    },
    AVOption {
        name: c"twoloop".as_ptr(),
        help: c"Two loop searching method".as_ptr(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue {
            i64_0: AAC_CODER_TWOLOOP as c_long,
        },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"coder".as_ptr(),
    },
    AVOption {
        name: c"fast".as_ptr(),
        help: c"Default fast search".as_ptr(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue {
            i64_0: AAC_CODER_FAST as c_long,
        },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"coder".as_ptr(),
    },
    AVOption {
        name: c"aac_ms".as_ptr(),
        help: c"Force M/S stereo coding".as_ptr(),
        offset: 32,
        type_0: AV_OPT_TYPE_BOOL,
        default_val: DefaultValue {
            i64_0: -(1) as c_long,
        },
        min: -1.,
        max: 1.,
        flags: 1 | 8,
        unit: null(),
    },
    AVOption {
        name: c"aac_is".as_ptr(),
        help: c"Intensity stereo coding".as_ptr(),
        offset: 36,
        type_0: AV_OPT_TYPE_BOOL,
        default_val: DefaultValue { i64_0: 1 },
        min: -1.,
        max: 1.,
        flags: 1 | 8,
        unit: null(),
    },
    AVOption {
        name: c"aac_pns".as_ptr(),
        help: c"Perceptual noise substitution".as_ptr(),
        offset: 12,
        type_0: AV_OPT_TYPE_BOOL,
        default_val: DefaultValue { i64_0: 1 },
        min: -1.,
        max: 1.,
        flags: 1 | 8,
        unit: null(),
    },
    AVOption {
        name: c"aac_tns".as_ptr(),
        help: c"Temporal noise shaping".as_ptr(),
        offset: 16,
        type_0: AV_OPT_TYPE_BOOL,
        default_val: DefaultValue { i64_0: 1 },
        min: -1.,
        max: 1.,
        flags: 1 | 8,
        unit: null(),
    },
    AVOption {
        name: c"aac_ltp".as_ptr(),
        help: c"Long term prediction".as_ptr(),
        offset: 20,
        type_0: AV_OPT_TYPE_BOOL,
        default_val: DefaultValue { i64_0: 0 },
        min: -1.,
        max: 1.,
        flags: 1 | 8,
        unit: null(),
    },
    AVOption {
        name: c"aac_pred".as_ptr(),
        help: c"AAC-Main prediction".as_ptr(),
        offset: 28,
        type_0: AV_OPT_TYPE_BOOL,
        default_val: DefaultValue { i64_0: 0 },
        min: -1.,
        max: 1.,
        flags: 1 | 8,
        unit: null(),
    },
    AVOption {
        name: c"aac_pce".as_ptr(),
        help: c"Forces the use of PCEs".as_ptr(),
        offset: 24,
        type_0: AV_OPT_TYPE_BOOL,
        default_val: DefaultValue { i64_0: 0 },
        min: -1.,
        max: 1.,
        flags: 1 | 8,
        unit: null(),
    },
    AVOption {
        name: c"aac_main".as_ptr(),
        help: null(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue { i64_0: 0 },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"avctx.profile".as_ptr(),
    },
    AVOption {
        name: c"aac_low".as_ptr(),
        help: null(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue { i64_0: 1 },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"avctx.profile".as_ptr(),
    },
    AVOption {
        name: c"aac_ssr".as_ptr(),
        help: null(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue { i64_0: 2 },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"avctx.profile".as_ptr(),
    },
    AVOption {
        name: c"aac_ltp".as_ptr(),
        help: null(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue { i64_0: 3 },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"avctx.profile".as_ptr(),
    },
    AVOption {
        name: c"aac_he".as_ptr(),
        help: null(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue { i64_0: 4 },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"avctx.profile".as_ptr(),
    },
    AVOption {
        name: c"aac_he_v2".as_ptr(),
        help: null(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue { i64_0: 28 },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"avctx.profile".as_ptr(),
    },
    AVOption {
        name: c"aac_ld".as_ptr(),
        help: null(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue { i64_0: 22 },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"avctx.profile".as_ptr(),
    },
    AVOption {
        name: c"aac_eld".as_ptr(),
        help: null(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue { i64_0: 38 },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"avctx.profile".as_ptr(),
    },
    AVOption {
        name: c"mpeg2_aac_low".as_ptr(),
        help: null(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue { i64_0: 128 },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"avctx.profile".as_ptr(),
    },
    AVOption {
        name: c"mpeg2_aac_he".as_ptr(),
        help: null(),
        offset: 0,
        type_0: AV_OPT_TYPE_CONST,
        default_val: DefaultValue { i64_0: 131 },
        min: -2147483647. - 1.,
        max: 2147483647.,
        flags: 1 | 8,
        unit: c"avctx.profile".as_ptr(),
    },
    AVOption {
        name: null(),
        help: null(),
        offset: 0,
        type_0: AV_OPT_TYPE_FLAGS,
        default_val: DefaultValue { i64_0: 0 },
        min: 0.,
        max: 0.,
        flags: 0,
        unit: null(),
    },
];
